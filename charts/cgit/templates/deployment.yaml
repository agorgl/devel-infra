apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cgit.fullname" . }}
  labels:
    {{- include "cgit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cgit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cgit.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cgit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: repos
              mountPath: /var/www/cgit
            - name: config
              mountPath: /etc
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: setup
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - "/bin/sh"
            - "-c"
            - >-
              awk '/DocumentRoot/{$2="\"/var/www/cgit\""};{print}' /etc/httpd/conf.d/httpd-cgit.conf > /tmp/httpd-cgit.conf.tmp \
                && sed -i '/ScriptAlias/d' /tmp/httpd-cgit.conf.tmp \
                && echo 'SetEnv GIT_PROJECT_ROOT "/var/www/cgit"' >> /tmp/httpd-cgit.conf.tmp \
                && echo -e '<Directory "/usr/libexec/git-core">\n    Require all granted\n</Directory>' >> /tmp/httpd-cgit.conf.tmp \
                && echo 'ScriptAliasMatch "^/(.*/(HEAD|info/refs|git-upload-pack))$" /usr/libexec/git-core/git-http-backend/$1' >> /tmp/httpd-cgit.conf.tmp \
                && echo 'ScriptAlias / /usr/libexec/cgit/cgi-bin/cgit/' >> /tmp/httpd-cgit.conf.tmp \
                && mv /tmp/httpd-cgit.conf.tmp /etc/httpd/conf.d/httpd-cgit.conf \
                && cp -r /etc/. /config
          volumeMounts:
            - name: config
              mountPath: /config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: repos
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.repos }}
        - name: config
          emptyDir: {}
